apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:11.5
        ports:
        - containerPort: 5432
        resources:
          limits:
            memory: "512Mi"
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/pgdata
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: postgres-claim
---
kind: Service
apiVersion: v1
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: person-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: person-svc
  template:
    metadata:
      labels:
        app: person-svc
    spec:
      containers:
      - name: person-svc
        image: servantcode/person-svc:0.0.46.160
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "300Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx256m -Xms256m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: person-svc
spec:
  selector:
    app: person-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ministry-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ministry-svc
  template:
    metadata:
      labels:
        app: ministry-svc
    spec:
      containers:
      - name: ministry-svc
        image: servantcode/ministry-svc:0.0.34.76
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: ministry-svc
spec:
  selector:
    app: ministry-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: permission-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: permission-svc
  template:
    metadata:
      labels:
        app: permission-svc
    spec:
      containers:
      - name: permission-svc
        image: servantcode/permission-svc:0.0.38.105
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
        - name: HOST_URL
          valueFrom:
            configMapKeyRef:
              name: host-url
              key: host-url
---
kind: Service
apiVersion: v1
metadata:
  name: permission-svc
spec:
  selector:
    app: permission-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schedule-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schedule-svc
  template:
    metadata:
      labels:
        app: schedule-svc
    spec:
      containers:
      - name: schedule-svc
        image: servantcode/schedule-svc:0.0.34.77
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "250Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx192m -Xms192m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: schedule-svc
spec:
  selector:
    app: schedule-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: donation-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: donation-svc
  template:
    metadata:
      labels:
        app: donation-svc
    spec:
      containers:
      - name: donation-svc
        image: servantcode/donation-svc:0.0.59.259
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "300Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx256m -Xms256m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: donation-svc
spec:
  selector:
    app: donation-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics-svc
  template:
    metadata:
      labels:
        app: metrics-svc
    spec:
      containers:
      - name: metrics-svc
        image: servantcode/metrics-svc:0.0.38.140
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: metrics-svc
spec:
  selector:
    app: metrics-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: photo-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: photo-svc
  template:
    metadata:
      labels:
        app: photo-svc
    spec:
      containers:
      - name: photo-svc
        image: servantcode/photo-svc:0.0.32.61
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: photo-svc
spec:
  selector:
    app: photo-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: note-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: note-svc
  template:
    metadata:
      labels:
        app: note-svc
    spec:
      containers:
      - name: note-svc
        image: servantcode/note-svc:0.0.33.63
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: note-svc
spec:
  selector:
    app: note-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: email-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: email-svc
  template:
    metadata:
      labels:
        app: email-svc
    spec:
      containers:
      - name: email-svc
        image: servantcode/email-svc:0.0.35.82
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: SECURE_CONFIG_KEY
          valueFrom:
            secretKeyRef:
              name: secure-key
              key: secure-key
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: email-svc
spec:
  selector:
    app: email-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sacrament-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sacrament-svc
  template:
    metadata:
      labels:
        app: sacrament-svc
    spec:
      containers:
      - name: sacrament-svc
        image: servantcode/sacrament-svc:0.0.32.61
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: sacrament-svc
spec:
  selector:
    app: sacrament-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parish-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parish-svc
  template:
    metadata:
      labels:
        app: parish-svc
    spec:
      containers:
      - name: parish-svc
        image: servantcode/parish-svc:0.0.32.70
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: parish-svc
spec:
  selector:
    app: parish-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: search-svc
  template:
    metadata:
      labels:
        app: search-svc
    spec:
      containers:
      - name: search-svc
        image: servantcode/search-svc:0.0.34.68
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: search-svc
spec:
  selector:
    app: search-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: formation-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: formation-svc
  template:
    metadata:
      labels:
        app: formation-svc
    spec:
      containers:
      - name: formation-svc
        image: servantcode/formation-svc:0.0.50.195
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: formation-svc
spec:
  selector:
    app: formation-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: integration-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: integration-svc
  template:
    metadata:
      labels:
        app: integration-svc
    spec:
      containers:
      - name: integration-svc
        image: servantcode/integration-svc:0.0.34.142
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /rest/ping
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: integration-svc
spec:
  selector:
    app: integration-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parish-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parish-manager
  template:
    metadata:
      labels:
        app: parish-manager
    spec:
      containers:
      - name: parish-manager
        image: servantcode/parish-manager:0.0.88.170
        ports:
        - name: http
          containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
---
kind: Service
apiVersion: v1
metadata:
  name: parish-manager
spec:
  selector:
    app: parish-manager
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parishioner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parishioner
  template:
    metadata:
      labels:
        app: parishioner
    spec:
      containers:
      - name: parishioner
        image: servantcode/parishioner:0.0.26.59
        ports:
        - name: http
          containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: http
          failureThreshold: 10
          periodSeconds: 30
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
---
kind: Service
apiVersion: v1
metadata:
  name: parishioner
spec:
  selector:
    app: parishioner
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
