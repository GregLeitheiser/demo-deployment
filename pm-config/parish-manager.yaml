apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        resources:
          limits:
            memory: "256Mi"
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/pgdata
        volumeMounts:
        - mountPath: /var/lib/postgresql
          name: pgdata
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: postgres-claim
---
kind: Service
apiVersion: v1
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: person-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: person-svc
  template:
    metadata:
      labels:
        app: person-svc
    spec:
      containers:
      - name: person-svc
        image: servantcode/person-svc
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: person-svc
spec:
  selector:
    app: person-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ministry-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ministry-svc
  template:
    metadata:
      labels:
        app: ministry-svc
    spec:
      containers:
      - name: ministry-svc
        image: servantcode/ministry-svc
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: ministry-svc
spec:
  selector:
    app: ministry-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: permission-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: permission-svc
  template:
    metadata:
      labels:
        app: permission-svc
    spec:
      containers:
      - name: permission-svc
        image: servantcode/permission-svc
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: permission-svc
spec:
  selector:
    app: permission-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schedule-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schedule-svc
  template:
    metadata:
      labels:
        app: schedule-svc
    spec:
      containers:
      - name: schedule-svc
        image: servantcode/schedule-svc
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: schedule-svc
spec:
  selector:
    app: schedule-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: donation-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: donation-svc
  template:
    metadata:
      labels:
        app: donation-svc
    spec:
      containers:
      - name: donation-svc
        image: servantcode/donation-svc
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: donation-svc
spec:
  selector:
    app: donation-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics-svc
  template:
    metadata:
      labels:
        app: metrics-svc
    spec:
      containers:
      - name: metrics-svc
        image: servantcode/metrics-svc
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: metrics-svc
spec:
  selector:
    app: metrics-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: photo-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: photo-svc
  template:
    metadata:
      labels:
        app: photo-svc
    spec:
      containers:
      - name: photo-svc
        image: servantcode/photo-svc
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: photo-svc
spec:
  selector:
    app: photo-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: note-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: note-svc
  template:
    metadata:
      labels:
        app: note-svc
    spec:
      containers:
      - name: note-svc
        image: servantcode/note-svc
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
        - name: DB_HOST
          value: "postgres"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-client-secrets
              key: db_password
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-key
              key: jwt-key
---
kind: Service
apiVersion: v1
metadata:
  name: note-svc
spec:
  selector:
    app: note-svc
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parish-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parish-manager
  template:
    metadata:
      labels:
        app: parish-manager
    spec:
      containers:
      - name: parish-manager
        image: servantcode/parish-manager
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "200Mi"
        env:
        - name: ES_JAVA_OPTS 
          value: "-Xmx128m -Xms128m"
---
kind: Service
apiVersion: v1
metadata:
  name: parish-manager
spec:
  selector:
    app: parish-manager
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
